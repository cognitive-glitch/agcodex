[package]
categories = ["development-tools", "command-line-utilities"]
description = "Model Context Protocol server mode for AGCodex"
documentation = "https://docs.rs/agcodex-mcp-server"
edition.workspace = true
homepage = "https://github.com/agcodex/agcodex"
keywords = ["ai", "coding-assistant", "ast", "tree-sitter", "llm"]
license = { workspace = true }
name = "agcodex-mcp-server"
repository = "https://github.com/agcodex/agcodex"
version = { workspace = true }

[[bin]]
name = "agcodex-mcp-server"
path = "src/main.rs"

[lib]
name = "agcodex_mcp_server"
path = "src/lib.rs"

[lints]
workspace = true

[dependencies]
agcodex-arg0 = { path = "../arg0", version = "0.1.0" }
agcodex-common = { path = "../common", version = "0.1.0" }
agcodex-core = { path = "../core", version = "0.1.0" }
agcodex-login = { path = "../login", version = "0.1.0" }
agcodex-mcp-types = { path = "../mcp-types", version = "0.1.0" }
agcodex-protocol = { path = "../protocol", version = "0.1.0" }
anyhow = { workspace = true }
schemars = { workspace = true }
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }
shlex = { workspace = true }
strum_macros = { workspace = true }
tokio = { workspace = true, features = [
    "io-std",
    "macros",
    "process",
    "rt-multi-thread",
    "signal",
] }
toml = { workspace = true }
tracing = { workspace = true, features = ["log"] }
tracing-subscriber = { workspace = true, features = ["env-filter", "fmt"] }
uuid = { workspace = true, features = ["serde", "v4"] }

[dev-dependencies]
anyhow = { workspace = true }
assert_cmd = { workspace = true }
mcp_test_support = { path = "tests/common" }
pretty_assertions = { workspace = true }
tempfile = { workspace = true }
tokio-test = { workspace = true }
wiremock = { workspace = true }
